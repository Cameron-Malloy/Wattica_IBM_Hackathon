# retrieves census data on the percent of the population that is elderly or disabled and medium income for each county

from census import Census
from us import states
import pandas as pd
from dotenv import load_dotenv
import os

load_dotenv()
CENSUS_API_KEY = os.getenv("CENSUS_API_KEY")

if not CENSUS_API_KEY:
    raise ValueError("CENSUS_API_KEY environment variable not set")

c = Census(CENSUS_API_KEY)

def get_data(state): # call function with state abb (ex. CA, NY)
    state_fips = states.lookup(state).fips
    data = c.acs5.state_place(
        fields=[
            "B01001_001E", #total population

            # men 65 & up
            "B01001_020E",
            "B01001_021E",
            "B01001_022E",
            "B01001_023E",
            "B01001_024E",
            "B01001_025E",
           
            #women 65 & up
            "B01001_044E",
            "B01001_045E",
            "B01001_046E",
            "B01001_047E",
            "B01001_048E",
            "B01001_049E",

            "B19013_001E", # median household income (past 12 mo)

            "B18101_001E", # disabled population
        ],
        state_fips=state_fips,
        place="*"
    )

    df = pd.DataFrame(data)

    over_65_codes = [
        "B01001_020E", "B01001_021E", "B01001_022E", "B01001_023E", "B01001_024E", "B01001_025E",
        "B01001_044E", "B01001_045E", "B01001_046E", "B01001_047E", "B01001_048E", "B01001_049E"
    ]
    
    # save everything as an integer
    df[over_65_codes + ["B01001_001E", "B19013_001E", "B18101_001E"]] = df[over_65_codes + ["B01001_001E", "B19013_001E", "B18101_001E"]].astype(int)

    df = df[df["B01001_001E"] >= 50]

    df["percent_over_65"] = df[over_65_codes].sum(axis=1) / df["B01001_001E"]
    df["median_income"] = df["B19013_001E"]
    df["percent_disabled"] = df["B18101_001E"] / df["B01001_001E"]

    df = df[["state", "place", "percent_over_65", "median_income", "percent_disabled"]]

    return df

